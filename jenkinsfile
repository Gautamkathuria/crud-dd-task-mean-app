pipeline {
    agent any

    tools {
        git 'Default'   // Use Git tool configured in Jenkins
    }

    environment {
        DOCKERHUB_REPO = 'kathuriagautam2411'
        FRONTEND_IMAGE = 'mean-frontend'
        BACKEND_IMAGE  = 'mean-backend'
        VM_USER = 'ubuntu'
        VM_IP   = '35.154.2.193'   // Replace with your EC2 public IP
    }

    stages {
        stage('Checkout') {
            steps {
                git branch: 'main', url: 'https://github.com/Gautamkathuria/crud-dd-task-mean-app.git'
            }
        }

        stage('Build Docker Images') {
            steps {
                sh """
                docker build -t $DOCKERHUB_REPO/$FRONTEND_IMAGE:latest frontend
                docker build -t $DOCKERHUB_REPO/$BACKEND_IMAGE:latest backend
                """
            }
        }

        stage('Push to Docker Hub') {
            steps {
                script {
                    withDockerRegistry([credentialsId: '0c1f960f-941f-463c-81d4-7ec2b1834bfe', url: '']) {
                        sh """
                        docker push $DOCKERHUB_REPO/$FRONTEND_IMAGE:latest
                        docker push $DOCKERHUB_REPO/$BACKEND_IMAGE:latest
                        """
                    }
                }
            }
        }

        stage('Deploy on AWS VM') {
            steps {
                script {
                    sshagent (credentials: ['aws-ec2-key']) {
                        sh """
                        ssh -o StrictHostKeyChecking=no $VM_USER@$VM_IP '
                            docker pull $DOCKERHUB_REPO/$FRONTEND_IMAGE:latest &&
                            docker pull $DOCKERHUB_REPO/$BACKEND_IMAGE:latest &&
                            docker stop frontend || true &&
                            docker rm frontend || true &&
                            docker stop backend || true &&
                            docker rm backend || true &&
                            docker run -d --name frontend -p 80:80 $DOCKERHUB_REPO/$FRONTEND_IMAGE:latest &&
                            docker run -d --name backend -p 3000:3000 $DOCKERHUB_REPO/$BACKEND_IMAGE:latest
                        '
                        """
                    }
                }
            }
        }
    }
}
